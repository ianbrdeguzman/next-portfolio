{
  "about": {
    "text": {
      "one": "Hi! My name is Ian De Guzman, Industrial Engineer who fell in love with programming, and has been in the I.T. industry since 2013. I am a passionate, resilient, and hardworking developer who looks forward to collaborate and learn from engineers who are much smarter than me.",
      "two": "Originally from the Philippines, lived in Sydney, Australia and currently based in Toronto, Canada. Moved across the globe to chase opportunities and pursue my passion."
    },
    "education": [
      "Bachelor of Science in Industrial Engineering - University of Santo Tomas",
      "Accredited as Industrial Engineer - World Education Services",
      "Accredited as Industrial Engineer - Engineers Australia"
    ],
    "skills": {
      "frontend": ["HTML5", "CSS3", "JavaScript (ES6+)", "React", "Redux"],
      "backend": ["Node", "Express", "MongoDB", "Firebase", "Next.js"],
      "styling": [
        "SASS/SCSS",
        "Styled Components",
        "CSS Modules",
        "Tailwind CSS",
        "Material UI"
      ],
      "others": ["GraphQL", "Apollo", "Netlify", "Heroku", "Git / Github"]
    }
  },
  "experience": {
    "enbridge": {
      "name": "Enbridge",
      "role": "Service Desk Analyst",
      "city": "Toronto",
      "country": "Canada",
      "fromDate": "December 2020",
      "toDate": "Present",
      "task": [
        "Provide Service Desk technical support to users either via phone or email as required.",
        "Provide troubleshooting for all types of technical inquiries, service requests, and issues involving computers, network, smartphones/tablets, enterprise applications/systems.",
        "Develop, implement, and/or participate in the preparation knowledge base articles and/or documentation for Service Desk use; make recommendations for improvements."
      ]
    },
    "samsung": {
      "name": "Samsung Electronics",
      "role": "Process Improvement Systems Analyst",
      "city": "Sydney",
      "country": "Australia",
      "fromDate": "October 2019",
      "toDate": "July 2020",
      "task": [
        "Successfully lead the Direct Payment project (Online Booking Service System) for Australian Consumers.",
        "In charge of User Acceptance Testing on behalf of Australian subsidiary for all ongoing system changes and enhancements.",
        "Analyses business requirements and enhance systems that would benefit all parties."
      ]
    },
    "accenture": {
      "name": "Accenture",
      "role": "Senior Application Support Analyst",
      "city": "Manila",
      "country": "Philippines",
      "fromDate": "August 2013",
      "toDate": "February 2017",
      "task": [
        "Experience in providing application support for SAP applications such as BusinessObjects, BASIS & Security and SAP GRC.",
        "Ticket creation, troubleshooting and resolving incidents within agreed service level.",
        "Create documents and procedures for IT knowledge base."
      ]
    }
  },
  "projects": [
    {
      "id": 0,
      "name": "Messenger Clone",
      "description": "Ability to send and receive message realtime and react to messages without refreshing the page. A MERNG stack Messenger clone app, Using React, Context API, SASS/SCSS, Apollo Client on frontend, Apollo Server, MongoDB and Node on backend. Backend deployed on Heroku and Frontend deployed on Netlify. ",
      "todos": [
        "File/Image Upload",
        "Upload Avatar Image",
        "Account Password Reset"
      ],
      "challenge": "First project using GraphQL, used both Apollo Client and Server. One problem I encounter was Apollo websocket is making the connection at build time therefore bearer token which should be captured upon login cannot be authenticated on backend middleware.",
      "solution": "Solution I found was to refresh the page upon login or reconnect the websocket link upon login. I chose the latter.",
      "technologies": [
        "React",
        "SASS/SCSS",
        "Context API",
        "GraphQL",
        "MongoDB",
        "Node"
      ],
      "demo": "https://sleepy-clarke-0965a3.netlify.app/",
      "repo": "https://github.com/ianbrdeguzman/merng-messenger",
      "image": {
        "desktop": "/messenger-clone-desktop.png",
        "mobile": "/messenger-clone-mobile.png"
      }
    },
    {
      "id": 1,
      "name": "Netflix Clone",
      "description": "Shows trending movies, Netflix originals and more. Ability to add and remove a movie to your playlist. Includes an embedded video player that plays selected movie trailers. A full stack Netflix clone app, Using React, Styled Components, Redux Toolkit, Axios on the frontend, and Firebase Firestore on backend. Deployed in Firebase.",
      "todos": [
        "Integrate Facebook Sign In",
        "Manage Profiles",
        "Account details page"
      ],
      "challenge": "First time dealing with Firebase Auth and Firestore so it took sometime figuring out how to update array fields in Firestore.",
      "solution": "Solution was to use Firestore arrayUnion and arrayRemove function to properly update fields inside an array.",
      "technologies": [
        "React",
        "Styled Components",
        "Redux Toolkit",
        "Firebase"
      ],
      "demo": "https://netflix-clone-68612.web.app/",
      "repo": "https://github.com/ianbrdeguzman/react-netflix-clone",
      "image": {
        "desktop": "/netflix-clone-desktop.png",
        "mobile": "/netflix-clone-mobile.png"
      }
    },
    {
      "id": 2,
      "name": "Portfolio v1",
      "description": "Version 1 of my portfolio. Using Next.js React framework. Includes TailwindCSS dark mode theme toggle, api routes for data fetching and form submission. Nodemailer to send emails to my personal email address. Deployed in Vercel.",
      "todos": ["Better styling", "Better animation", "Add more projects"],
      "challenge": "Some of the challenge was deployment on Vercel, encountered CORS error, invalid auth using gmail smtp and missing environment variables.",
      "solution": "Solution was to introduce a api cors middleware. Creating an app password for gmail account and adding envoronment variables via Vercel cli.",
      "technologies": [
        "Next.js",
        "TailwindCSS",
        "Nodemailer",
        "React Hook Form"
      ],
      "demo": "https://next-portfolio-indol-one.vercel.app/",
      "repo": "https://github.com/ianbrdeguzman/next-portfolio",
      "image": {
        "desktop": "/portfolio-v1-desktop.png",
        "mobile": "/portfolio-v1-mobile.png"
      }
    },
    {
      "id": 3,
      "name": "Amazon Clone",
      "description": "Features image carousel, product page, cart page and checkout steps along with paypal checkout. User login, registration and ability to view order history. A full stack Amazon clone MERN App using REST APIs. Created using React, TailwindCSS, Redux and Axios on frontend and Node, Express and MongoDB on the backend. Frontend deployed on Netlify and backend deployed on Firebase Functions.",
      "todos": ["Ability to search", "Admin dashboard", "Stripe checkout"],
      "challenge": "Initially the backend was deployed on Heroku, then I received feedback that the page is taking too long to load. Found out that since Heroku dyno is sleeping when there is no traffic it is taking too long to get back up.",
      "solution": "Solution I came up with is to redeploy the backend on Firebase Functions.",
      "technologies": [
        "React",
        "Redux",
        "TailwindCSS",
        "Firebase Functions",
        "MongoDB"
      ],
      "demo": "https://trusting-banach-dba1ca.netlify.app/",
      "repo": "https://github.com/ianbrdeguzman/amazon-clone",
      "image": {
        "desktop": "/amazon-clone-desktop.png",
        "mobile": "/amazon-clone-mobile.png"
      }
    },
    {
      "id": 4,
      "name": "Todo App",
      "description": "This project was a challenge from Frontend Mentor, it include ability to create, update, filter, delete todos. Has light and dark theme mode toggle. The first project I worked with Redux, Node, Express and MongoDB Atlas. Learned alot with this simple app.",
      "todos": ["Ability to sort todos via drag and drop"],
      "challenge": "Biggest challenge was implementing sort todos via drag and drop.",
      "solution": "Have not come up with a solution yet, but I am leaning towards React Beautiful D&D. Need to revist this project in the future.",
      "technologies": ["React", "Redux", "CSS Modules", "Node", "MongoDB"],
      "demo": "https://mern-todo-app-1f57a.web.app/",
      "repo": "https://github.com/ianbrdeguzman/mern-todo-app",
      "image": {
        "desktop": "/todo-app-desktop.png",
        "mobile": "/todo-app-mobile.png"
      }
    },
    {
      "id": 5,
      "name": "Youtube Clone",
      "description": "A Youtube clone, powered by Youtube API. Features include paginated homepage, skeleton loading, search videos & channels, embed youtube video player. User authentication using gmail api on Firebase. Ability to search, comment, view liked videos and subscribe to channels. Created using React, Context API, CSS Modules, React Router, and deployed in Firebase.",
      "todos": [
        "Like and unlike a video",
        "Unsubscribe to a channel",
        "Fix warnings and bugs"
      ],
      "challenge": "Biggest challenge was styling, I want it as close as possible as I can. Another thing was state management, after this project I started learning Redux.",
      "solution": "My solution was to use CSS modules to avoid CSS classes collision.",
      "technologies": [
        "React",
        "Context",
        "CSS Module",
        "Firebase",
        "Youtube API"
      ],
      "demo": "https://clone-65d7e.web.app/",
      "repo": "https://github.com/ianbrdeguzman/react-youtube-clone",
      "image": {
        "desktop": "/youtube-clone-desktop.png",
        "mobile": "/youtube-clone-mobile.png"
      }
    },
    {
      "id": 6,
      "name": "Covid-19 Tracker",
      "description": "A Covid-19 tracker that shows todays covid cases, recovered and deaths around the world. Shows world map and affected countries, history of cases within the last 90 days and a table of highes cases, recovered and deaths. Created using React, Material UI, React Chart and React Leaflet. Powered by Disease.sh API and deployed to Firebase.",
      "todos": ["Light and Dark Theme", "Sort highest cases table"],
      "challenge": "Biggest challenge Leafletjs map, spent some time figuring out how React Leaflet works and how to make it appear on screen.",
      "solution": "The simple solution was it needs a fixed height.",
      "technologies": [
        "React",
        "Material UI",
        "React Chart",
        "React Leaflet",
        "Disease.sh API"
      ],
      "demo": "https://react-covid-19-tracker-b1c40.web.app/",
      "repo": "https://github.com/ianbrdeguzman/react-covid-19-tracker",
      "image": {
        "desktop": "/covid-19-desktop.png",
        "mobile": "/covid-19-mobile.png"
      }
    },
    {
      "id": 7,
      "name": "Designo Client",
      "description": "A Frontend Mentor challenge. A multi-page fictitious client website. This was my first big project using Styled Components. Created using React, React Router, Styled Components and React Leaflet. Deployed to Firebase.",
      "todos": ["Form submission API", "Refactor data and styles"],
      "challenge": "Tried my best to style as close to the challenge as possible.",
      "solution": "Learned to adapt based on props.",
      "technologies": [
        "React",
        "Styled Components",
        "React Leaflet",
        "Firebase"
      ],
      "demo": "https://designo-multipage.web.app/",
      "repo": "https://github.com/ianbrdeguzman/react-fem-designo",
      "image": {
        "desktop": "/designo-multipage-desktop.png",
        "mobile": "/designo-multipage-mobile.png"
      }
    }
  ],
  "contact": {
    "text": "My inbox is always open, whether you want to reach out or provide feedback on how to improve my work. Feel free to send me a message and I will try to get back to you as soon as I can. Cheers!"
  }
}
